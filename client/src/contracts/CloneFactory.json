{
  "contractName": "CloneFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "prototype",
          "type": "address"
        }
      ],
      "name": "clone",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prototype\",\"type\":\"address\"}],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CloneFactory.sol\":\"CloneFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CloneFactory.sol\":{\"keccak256\":\"0x05c5744c907f93f0dcb3171a6567c2d3bca5adad2917a360648b91ffbded33d1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d887ced9f9a2c6f8a19a63516dd2e52aa17380baa41f0871756f0b0dc0a68da5\",\"dweb:/ipfs/QmUHjQeQjwSa5zEBQownVG6B9T3wKNeizf7zxSyEeyZART\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061010e806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638124b78e14602d575b600080fd5b603c603836600460aa565b6058565b6040516001600160a01b03909116815260200160405180910390f35b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b60006020828403121560bb57600080fd5b81356001600160a01b038116811460d157600080fd5b939250505056fea26469706673582212205cf41f97ee61ab6b2b82afd3a517ce9d373361f4ac2f5c13da81a904eb3505bd64736f6c63430008120033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80638124b78e14602d575b600080fd5b603c603836600460aa565b6058565b6040516001600160a01b03909116815260200160405180910390f35b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b60006020828403121560bb57600080fd5b81356001600160a01b038116811460d157600080fd5b939250505056fea26469706673582212205cf41f97ee61ab6b2b82afd3a517ce9d373361f4ac2f5c13da81a904eb3505bd64736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:510:14",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:14",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:14"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:14"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:14",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:14",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:14",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:14"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:14"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:14",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:14",
                "type": ""
              }
            ],
            "src": "14:286:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "406:102:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "416:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "428:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "439:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "424:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "416:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "473:6:14"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "489:3:14",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "494:1:14",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "485:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "485:11:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "498:1:14",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "481:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "481:19:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "469:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "469:32:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:51:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "451:51:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "375:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "386:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "397:4:14",
                "type": ""
              }
            ],
            "src": "305:203:14"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "435:607:8:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "435:607:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;480:560;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;469:32:14;;;451:51;;439:2;424:18;480:560:8;;;;;;;;541:13;566:19;596:9;588:18;;566:40;;658:4;652:11;-1:-1:-1;;;683:5:8;676:81;795:11;788:4;781:5;777:16;770:37;-1:-1:-1;;;855:4:8;848:5;844:16;820:138;997:4;990:5;987:1;980:22;971:31;480:560;-1:-1:-1;;;;480:560:8:o;14:286:14:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:14;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:14:o",
  "source": "/*\n\n    Copyright 2020 DODO ZOO.\n    SPDX-License-Identifier: Apache-2.0\n\n*/\n\n// pragma solidity 0.6.9;\npragma solidity 0.8.18;\npragma experimental ABIEncoderV2;\n\ninterface ICloneFactory {\n    function clone(address prototype) external returns (address proxy);\n}\n\n// introduction of proxy mode design: https://docs.openzeppelin.com/upgrades/2.8/\n// minimum implementation of transparent proxy: https://eips.ethereum.org/EIPS/eip-1167\n\ncontract CloneFactory is ICloneFactory {\n    function clone(address prototype) external override returns (address proxy) {\n        bytes20 targetBytes = bytes20(prototype);\n        assembly {\n            let clone := mload(0x40)\n            mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(clone, 0x14), targetBytes)\n            mstore(\n                add(clone, 0x28),\n                0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n            )\n            proxy := create(0, clone, 0x37)\n        }\n        return proxy;\n    }\n}\n",
  "sourcePath": "/home/richard/EVM_Courses/Truffle_Web_ERC20/truffle/contracts/CloneFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/CloneFactory.sol",
    "exportedSymbols": {
      "CloneFactory": [
        1438
      ],
      "ICloneFactory": [
        1416
      ]
    },
    "id": 1439,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1407,
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "104:23:8"
      },
      {
        "id": 1408,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "128:33:8"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ICloneFactory",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1416,
        "linearizedBaseContracts": [
          1416
        ],
        "name": "ICloneFactory",
        "nameLocation": "173:13:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8124b78e",
            "id": 1415,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "clone",
            "nameLocation": "202:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1410,
                  "mutability": "mutable",
                  "name": "prototype",
                  "nameLocation": "216:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1415,
                  "src": "208:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "208:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "207:19:8"
            },
            "returnParameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1413,
                  "mutability": "mutable",
                  "name": "proxy",
                  "nameLocation": "253:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1415,
                  "src": "245:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "245:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "244:15:8"
            },
            "scope": 1416,
            "src": "193:67:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1439,
        "src": "163:99:8",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1417,
              "name": "ICloneFactory",
              "nameLocations": [
                "460:13:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1416,
              "src": "460:13:8"
            },
            "id": 1418,
            "nodeType": "InheritanceSpecifier",
            "src": "460:13:8"
          }
        ],
        "canonicalName": "CloneFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1438,
        "linearizedBaseContracts": [
          1438,
          1416
        ],
        "name": "CloneFactory",
        "nameLocation": "444:12:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1415
            ],
            "body": {
              "id": 1436,
              "nodeType": "Block",
              "src": "556:484:8",
              "statements": [
                {
                  "assignments": [
                    1427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1427,
                      "mutability": "mutable",
                      "name": "targetBytes",
                      "nameLocation": "574:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1436,
                      "src": "566:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 1426,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "566:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1432,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1430,
                        "name": "prototype",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1420,
                        "src": "596:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "588:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": {
                        "id": 1428,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "588:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "588:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "566:40:8"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "625:387:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "639:24:8",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "658:4:8",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "652:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "652:11:8"
                        },
                        "variables": [
                          {
                            "name": "clone",
                            "nodeType": "YulTypedName",
                            "src": "643:5:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "683:5:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "690:66:8",
                              "type": "",
                              "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "676:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "676:81:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "676:81:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "781:5:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "788:4:8",
                                  "type": "",
                                  "value": "0x14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "777:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "777:16:8"
                            },
                            {
                              "name": "targetBytes",
                              "nodeType": "YulIdentifier",
                              "src": "795:11:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "770:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "770:37:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "770:37:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "848:5:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "855:4:8",
                                  "type": "",
                                  "value": "0x28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "844:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "844:16:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:66:8",
                              "type": "",
                              "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "820:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "820:138:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "820:138:8"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "971:31:8",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "987:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "990:5:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "997:4:8",
                              "type": "",
                              "value": "0x37"
                            }
                          ],
                          "functionName": {
                            "name": "create",
                            "nodeType": "YulIdentifier",
                            "src": "980:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "980:22:8"
                        },
                        "variableNames": [
                          {
                            "name": "proxy",
                            "nodeType": "YulIdentifier",
                            "src": "971:5:8"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 1424,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "971:5:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1427,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "795:11:8",
                      "valueSize": 1
                    }
                  ],
                  "id": 1433,
                  "nodeType": "InlineAssembly",
                  "src": "616:396:8"
                },
                {
                  "expression": {
                    "id": 1434,
                    "name": "proxy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1424,
                    "src": "1028:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1425,
                  "id": 1435,
                  "nodeType": "Return",
                  "src": "1021:12:8"
                }
              ]
            },
            "functionSelector": "8124b78e",
            "id": 1437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clone",
            "nameLocation": "489:5:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1422,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "523:8:8"
            },
            "parameters": {
              "id": 1421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1420,
                  "mutability": "mutable",
                  "name": "prototype",
                  "nameLocation": "503:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "495:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "494:19:8"
            },
            "returnParameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1424,
                  "mutability": "mutable",
                  "name": "proxy",
                  "nameLocation": "549:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "541:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:15:8"
            },
            "scope": 1438,
            "src": "480:560:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1439,
        "src": "435:607:8",
        "usedErrors": []
      }
    ],
    "src": "104:939:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "11155111": {
      "events": {},
      "links": {},
      "address": "0xf11fCe2aDa8d2001a5C9f9De6A3F8E2D358d2Ed3",
      "transactionHash": "0x6ec6b50855512e43a777fd11c77e852bb78950afec0a34593989a12c5e39fc85"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-24T23:35:25.453Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}